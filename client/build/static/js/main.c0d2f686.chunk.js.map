{"version":3,"sources":["components/LoginButton.js","components/LogoutButton.js","components/SocialMedia.js","components/DiaryEntry.js","components/DiaryCards.js","components/NewEntry.js","components/QuoteForm.js","components/QuoteContainer.js","components/SearchBar.js","components/Hub.js","App.js","index.js"],"names":["LoginButton","useAuth0","loginWithRedirect","isAuthenticated","style","display","flexDirection","margin","backgroundColor","padding","borderRadius","src","alt","width","height","borderColor","paddingRight","paddingLeft","onClick","LogoutButton","logout","SocialMedia","felxDirection","FacebookShareButton","url","quote","hashtag","FacebookIcon","size","TwitterShareButton","title","hashtags","TwitterIcon","DiaryEntry","props","state","edit","delete","isShown","date","buttonClicked","bind","displayDate","myDate","this","entry","substring","year","month","day","event","target","name","changeHandler","id","change","setState","prevState","alignItems","paddingTop","fontSize","text","marginLeft","border","borderStyle","borderLeftColor","borderTopColor","borderRightColor","borderBottomColor","marginRight","React","Component","DiaryCards","entriesArray","entries","map","item","_id","gridTemplateColumns","gap","button","NewEntry","handelChange","submiter","value","updateValue","preventDefault","myObject","submitHandler","for","type","onChange","rows","quotesInner","justifyContent","QuoteForm","author","submitQuote","placeholder","displayQuotes","buttonP","buttonM","moveButton","marginTop","QuoteContainer","index","length","quotes","didMount","showMyComponent","backupIndex","forwardIndex","addQuote","minusQuote","loadQuotes","axios","get","document","location","hostname","then","response","data","temp","filter","obj","username","res","console","log","newQuote","dbQuote","post","catch","error","alert","SearchBar","searchHandler","Hub","user","useState","displayArray","setArray","searchArray","setSearch","newTitle","setTitle","newDate","setDate","newText","setText","newId","setId","main","setHeader","accent","setSidebar","profile","setProfile","isLoaded","loaded","headerColors","sideColors","loadProfile","curUser","sub","theme","dbUser","addUser","useEffect","className","picture","newIndex","updateDB","myNewEntry","dbEntry","newValue","keyword","i","includes","editObject","deleteEntry","editEntry","App","isLoading","Spinner","animation","role","ReactDOM","render","domain","clientId","redirectURi","window","origin","getElementById"],"mappings":"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","file":"static/js/main.c0d2f686.chunk.js","sourcesContent":["import React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst LoginButton = () => {\n    const { loginWithRedirect , isAuthenticated } = useAuth0();\n    \n\n    const button = {\n        borderColor : \"transparent\",\n        backgroundColor : \"white\",\n        borderRadius : 20,\n        margin : 5,\n        paddingRight: 10,\n        paddingLeft: 10\n    }\n\n    return (\n        (!isAuthenticated) && (\n            <div style = {{display:\"flex\", flexDirection: \"column\", \"justify-content\" :\"center\", \"align-items\" :\"center\", margin : 200, backgroundColor : \"pink\", padding : 100, borderRadius : 50}}>\n                <img src = {'/logo.svg'} alt = \"logo\" width = \"50\" height = \"50\"/>\n                <h1 style = {{margin : 20}}>Welcome to Daily Diary Hub</h1>\n                <button style = {button} onClick = {() => loginWithRedirect()}>\n                    Log In\n                </button>\n            </div>\n        )\n    )\n}\n\nexport default LoginButton","import React from 'react'\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst LogoutButton = () => {\n    const { logout, isAuthenticated } = useAuth0();\n    \n    const button = {\n        borderColor : \"transparent\",\n        backgroundColor : \"white\",\n        borderRadius : 20,\n        margin : 5,\n        paddingRight: 10,\n        paddingLeft: 10\n    }\n\n    return (\n        isAuthenticated && (\n            <button style = {button} onClick = {() => logout()}>\n                Log Out\n            </button>\n        )\n    )\n}\n\nexport default LogoutButton","import React from 'react';\nimport {FacebookShareButton, FacebookIcon, TwitterShareButton, TwitterIcon} from \"react-share\";\n\nfunction SocialMedia(){\n    const shareBttns = {\n        display : \"flex\",\n        felxDirection: \"row\",\n        //backgroundColor: \"yellow\",\n        //0padding : 20\n    }\n    return(\n        <div style = {shareBttns}>\n            <FacebookShareButton \n                url={\"https://angelageorge.me\"}\n                quote={\"This is a temporary URL until the site is hosted outside of local host\"}\n                hashtag=\"#writeeveryday\">\n                 <FacebookIcon size={36} />\n              </FacebookShareButton>\n            <TwitterShareButton\n                url={\"https://angelageorge.me\"}\n                title={\"This is a temporary URL until the site is hosted outside of local host\"}\n                hashtags = {[\"writeeveryday\"]}>\n                <TwitterIcon size= {36} />\n            </TwitterShareButton>\n        </div>\n    )\n}\nexport default SocialMedia","import React from 'react'\nimport SocialMedia from './SocialMedia'\n\n\n\nclass DiaryEntry extends React.Component {\n    constructor(props) {\n        super()\n        this.state = {\n            edit : false,\n            delete : false,\n            isShown : false,\n            date: \"\"\n        }\n        this.buttonClicked = this.buttonClicked.bind(this)\n        this.displayDate = this.displayDate.bind(this)\n    }\n    \n    displayDate(){\n        let myDate = this.props.entry.date.substring(0,10)\n        \n        let year = myDate.substring(0, 4);\n        let month = myDate.substring(5, 7);\n        let day = myDate.substring(8, 10);\n\n        myDate = month + '/' + day + '/' + year;\n\n        return(myDate)\n    }\n    buttonClicked(event){\n        if (event.target.name === \"edit\"){\n            this.props.changeHandler(\n                {entry: this.props.entry,\n                    id: this.props.id,\n                    change: \"edit\"\n            })\n\n        }\n        else{\n            this.props.changeHandler(\n                {entry: this.props.entry,\n                    id: this.props.id,\n                    change: \"delete\"\n            })\n        }  \n    }\n    \n    render () {\n        \n    const titleContainer = {\n        display: \"flex\",\n        flexDirection : \"row\",\n        alignItems: \"center\",\n        paddingTop : 5,\n        //paddingBottom : 5,\n        margin : 10\n    }\n\n    const textStyle = {\n        padding : 20\n    }\n\n    const buttonD = {\n        border: 2,\n        borderStyle: \"solid\",\n        borderLeftColor : \"white\",\n        borderTopColor : \"white\",\n        borderRightColor: \"white\",\n        borderBottomColor: \"white\",\n        backgroundColor : \"transparent\",\n        borderRadius : \"0px 20px 20px 0px\",\n        marginRight : 5,\n        paddingRight: 10,\n        paddingLeft: 10\n    }\n\n    const buttonE = {\n        borderColor : \"transparent\",\n        backgroundColor : \"white\",\n        borderRadius : \"20px 0px 0px 20px\",\n        marginLeft : 5,\n        paddingRight: 10,\n        paddingLeft: 10\n    }\n\n    return (\n        <div \n        onClick={() => this.setState(\n            prevState => {return {isShown : !prevState.isShown}}\n            )}\n        style = {{backgroundColor : \"powderblue\", margin : 10, padding :10, borderRadius : 20}}\n        >\n            \n            <div style = {titleContainer}>\n                <h2 >{this.props.entry.title}</h2>\n                <h3 style = {{fontSize : 20, padding : 10}}>{this.displayDate()}</h3>\n            </div>   \n            <hr />\n            { this.state.isShown &&\n                <p style = {textStyle}>{this.props.entry.text}</p>\n            }\n\n            <div>\n                <button style = {buttonE} name = \"edit\" onClick = {this.buttonClicked}>edit</button>\n                <button style = {buttonD} name = \"delete\" onClick = {this.buttonClicked}>delete</button>\n            </div>\n            \n        </div>\n    )\n    } \n}\n\nexport default DiaryEntry","import React from 'react';\nimport DiaryEntry from './DiaryEntry'\n\nclass DiaryCards extends React.Component {\n\n    constructor(props){\n        super()\n    }\n\n    render(){\n        \n        const myGridStyle = {\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(3, 1fr)\",\n            gap: 10,\n        }\n\n        \n\n        const entriesArray = this.props.entries.map((item, curIndex = 0) => {\n            \n        ++curIndex\n        return (<DiaryEntry edit = {false} delete = {false} entry = {item} id = {item._id} key = {item._id} changeHandler = {this.props.changeHandler}/>)\n        });\n        \n\n        return (\n            <div style = {myGridStyle}>\n                {entriesArray}\n            </div>\n        )\n    }\n}\n\nexport default DiaryCards","import React from 'react';\n\nconst button = {\n    borderColor : \"transparent\",\n    backgroundColor : \"white\",\n    borderRadius : 20,\n    margin : 5,\n    paddingRight: 10,\n    paddingLeft: 10\n}\n\nclass NewEntry extends React.Component {\n    constructor (props) {\n        super()\n        this.state = {\n            title : props.title,\n            date : props.date,\n            text : props.text\n        }\n        this.handelChange = this.handelChange.bind(this)\n        this.submiter = this.submiter.bind(this)\n    }\n\n    handelChange(event) {\n        const {name, value} = event.target\n        this.props.updateValue({[name] : value})\n    }\n\n    \n    submiter(event){\n        event.preventDefault()\n        var myObject = {_id: \"\", title: \"\", date: \"\", text: \"\"}\n            myObject._id = this.props.id\n            myObject.title = this.props.title\n            myObject.date = this.props.date\n            myObject.text = this.props.text\n        this.props.submitHandler(myObject)      \n    }\n\n    \n    render () {\n\n        const NewEntryContainer = {\n            display: \"flex\",\n            flexDirection: \"column\",\n            paddingTop : 20,\n            paddingLeft : 20,\n            paddingRight : 20\n        }\n\n        return (\n            <form style = {NewEntryContainer}>\n                <h2>Write Entry</h2>\n                \n                <p>\n                    <label for = \"newTitle\">Title:  </label>\n                    <input style = {{borderColor : \"transparent\", borderRadius : 10}}type=\"text\" name= \"title\" value = {this.props.title} onChange = {this.handelChange} />\n                </p>\n                \n                <p>\n                    <label for = \"newDate\">Date: </label>\n                    <input style = {{borderColor : \"transparent\", borderRadius : 10}}type=\"date\" name= \"date\" id=\"newDate\" value = {this.props.date} onChange = {this.handelChange}/>\n                </p>\n                \n                <p> \n                    <textarea style = {{borderColor : \"transparent\", borderRadius : 10}}name=\"text\" rows=\"7\" value = {this.props.text} onChange = {this.handelChange}/>\n                    <button style = {button}onClick = {this.submiter}>Done</button>\n                </p>\n                \n            </form>\n\n        )\n    }\n}\n\nexport default NewEntry","import React from 'react'\n\n\nconst quotesInner = {\n    display: 'flex',\n    flexDirection: 'column',\n    //backgroundColor: 'yellow',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n}\n\nconst style = {\n    borderRadius : 50,\n    borderColor : \"transparent\",\n    margin : 5,\n    padding : 5\n}\n\nconst button = {\n    borderColor : \"transparent\",\n    backgroundColor : \"white\",\n    borderRadius : 20,\n    margin : 5,\n    paddingRight: 10,\n    paddingLeft: 10\n}\n\nclass QuoteForm extends React.Component{\n    constructor(props){\n        super()\n        this.state = {\n            quote: \"\",\n            author: \"\"\n        }\n        this.submitHandler = this.submitHandler.bind(this)\n        this.changeHandler = this.changeHandler.bind(this)\n    }\n\n    changeHandler(event){\n        const {name, value} = event.target \n        this.setState({[name] : value}    \n        )\n    }\n\n    submitHandler(){\n        this.props.submitQuote(this.state)\n    }\n\n    render () {\n        return (\n            <div style = {quotesInner}>\n                <input style = {style} name= \"quote\" onChange = {this.changeHandler} placeholder = \"type new quote\" />\n                <input style = {style} name= \"author\" onChange = {this.changeHandler} placeholder = \"type author\" />\n                <button style = {button} onClick = {this.submitHandler}> done </button>\n            </div>\n        )}\n\n    \n\n    \n}\n\nexport default QuoteForm\n\n\n","import React from 'react';\nimport QuoteForm from './QuoteForm';\nimport axios from 'axios';\n\nconst displayQuotes = {\n    display: 'flex',\n    flexDirection: 'row',\n    padding: 20\n}\n\nconst quotesInner = {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n}\n\nconst buttonP = {\n    border: 2,\n    borderStyle: \"solid\",\n    borderLeftColor : \"white\",\n    borderTopColor : \"white\",\n    borderRightColor: \"white\",\n    borderBottomColor: \"white\",\n    backgroundColor : \"transparent\",\n    borderRadius : \"0px 20px 20px 0px\",\n    marginRight : 5,\n    paddingRight: 10,\n    paddingLeft: 10\n}\n\nconst buttonM = {\n    borderColor : \"transparent\",\n    backgroundColor : \"white\",\n    borderRadius : \"20px 0px 00px 20px\",\n    marginLeft : 5,\n    paddingRight: 10,\n    paddingLeft: 10\n}\n  const button = {\n    borderColor : \"transparent\",\n    backgroundColor : \"white\",\n    borderRadius : 20,\n    margin : 5,\n    paddingRight: 10,\n    paddingLeft: 10\n}\n\nconst moveButton = {\n    borderColor : \"transparent\",\n    height : 30,\n    backgroundColor : \"white\",\n    borderRadius : 20,\n    marginTop : 30,\n    paddingRight: 10,\n    paddingLeft: 10\n}\n\nclass QuoteContainer extends React.Component{\n    constructor () {\n        super()\n        this.state = {\n            \n            index: 0,\n            length: 0,\n            quotes: [],\n            didMount: false,\n            showMyComponent : true\n        }\n        this.backupIndex = this.backupIndex.bind(this)\n        this.forwardIndex = this.forwardIndex.bind(this)\n        this.addQuote = this.addQuote.bind(this)\n        this.submitQuote = this.submitQuote.bind(this)\n        this.minusQuote = this.minusQuote.bind(this)\n        this.loadQuotes = this.loadQuotes.bind(this)\n    }\n\n    componentDidMount() {\n        this.loadQuotes()\n    }\n\n    loadQuotes(){\n        let id = this.props.id\n        axios.get('https://' + document.location.hostname + '/quotes')\n            .then(response=> {\n                if (response.data.length > 0){\n                    var temp = 0\n                    this.setState({\n                        quotes: response.data.filter( function(obj) {\n                             if (obj.username === id){\n                                 temp++;\n                                return obj\n                             }\n                             else return   \n                        }),\n                        length: temp,\n                        didMount: true,\n                        index: 0\n                    })\n                }\n            })\n    }\n\n    backupIndex(){\n        if (this.state.length === 1){\n            return;\n        }\n        this.setState(prevState => {\n            \n            if (prevState.index -1 < 0){\n                return {\n                    index : prevState.length-1\n                }\n            }\n            else {\n                return {\n                    index : prevState.index - 1\n                }\n            } \n        })\n    }\n\n    forwardIndex(){\n\n        if (this.state.length === 1){\n            return;\n        }\n        \n        this.setState(prevState => {\n            \n            if (prevState.index + 1 === prevState.length){\n                return {\n                    index : 0,\n                }\n            }\n            else {\n                return {\n                    index : prevState.index + 1,\n                }\n            } \n        })\n    }\n\n    addQuote(){\n        this.setState(prevState => {\n            return {\n                showMyComponent : !prevState.showMyComponent\n            }\n        })\n    }\n\n    minusQuote(){\n\n        if (this.state.length === 0){\n            return\n        }\n        let id = this.state.quotes[this.state.index]._id;\n        axios.delete('https://' + document.location.hostname + '/quotes/' + id)\n            .then(res => {\n            console.log(res.data)\n            this.setState({didMount: false})\n            this.loadQuotes()\n        });\n    }\n\n    submitQuote(newQuote){\n        const dbQuote = {\n            username: this.props.id, //pass down username from auth0\n            text: newQuote.quote,\n            author: newQuote.author\n        }\n\n        //temp url!\n        axios.post('https://' + document.location.hostname + '/quotes/add', dbQuote)\n            .then((response) => {\n                console.log(response.data)\n\n                this.setState(prevState => {\n                    return {\n                        showMyComponent : !prevState.showMyComponent\n                    } \n                })\n\n                this.loadQuotes();  \n            })\n            .catch(error => {\n                alert(\"you must type a valid quote and author\")\n            })\n\n        \n    }\n\n    render() {\n        \n        return(\n            <div style = {displayQuotes}>\n                <button style = {moveButton }onClick = {this.backupIndex}>&lt;</button>\n                <div>\n                    { this.state.showMyComponent && \n                    <div style = {quotesInner}>\n                        <h3>{(this.state.didMount && this.state.length > 0) && this.state.quotes[this.state.index].text} {this.state.length === 0 && \"add new quote\"}</h3>\n                        <h4>- {(this.state.didMount && this.state.length >0) && this.state.quotes[this.state.index].author} {this.state.length === 0 && \"by author\"}</h4>\n                        <p>\n                        <button style = {buttonM} onClick = {this.minusQuote}>-</button>\n                        <button style = {buttonP} onClick = {this.addQuote}>+</button>\n                        </p>\n                        \n                    </div>\n                    }\n                    {!this.state.showMyComponent && <QuoteForm submitQuote = {this.submitQuote}/>}\n                    \n                </div>\n                <button style = {moveButton} onClick = {this.forwardIndex}>&gt;</button>\n            </div>\n        )\n    }  \n}\n\nexport default QuoteContainer","import React from 'react';\n\n\nfunction SearchBar(props){\n\n    function changeHandler(event){\n        props.searchHandler(event.target.value);\n    }\n\n    const style = {\n        borderRadius : 50,\n        borderColor : \"transparent\",\n        backgroundColor : \"powderBlue\",\n        margin : 20,\n        padding : 5\n    }\n    return (\n        <div>\n            <input style = {style} type = \"text\" placeholder = \"🔍 search entry...\" onChange = {changeHandler} id = \"search-bar\"/>\n        </div>\n    )\n}\n\nexport default SearchBar","import React, { useEffect } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport LogoutButton from './LogoutButton.js';\nimport DiaryCards from './DiaryCards.js';\nimport NewEntry from './NewEntry';\nimport QuoteContainer from './QuoteContainer'\nimport SocialMedia from './SocialMedia.js';\nimport SearchBar from './SearchBar'\nimport axios from 'axios';\n\n\nfunction Hub() {\n    const { user, isAuthenticated } = useAuth0();\n    const mainContent = {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems : \"flex-start\"\n    }\n\n    const sidebar = {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    }\n\n    const displayEntries = {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"flex-start\"\n    }\n\n      const button = {\n        borderColor : \"transparent\",\n        backgroundColor : \"white\",\n        borderRadius : 20,\n        margin : 5,\n        paddingRight: 10,\n        paddingLeft: 10\n    }\n\n    const [displayArray, setArray] = React.useState([]);\n    const [searchArray, setSearch] = React.useState([])\n    const [newTitle, setTitle] = React.useState(\"\");\n    const [newDate, setDate] = React.useState(\"\");\n    const [newText, setText] = React.useState(\"\");\n    const [newId, setId] = React.useState(\"\");\n\n    function submitHandler(myNewEntry) { \n        const dbEntry = {\n            username: user.sub, //pass down username from auth0\n            title: myNewEntry.title,\n            text: myNewEntry.text,\n            date:  myNewEntry.date\n        }\n\n        if (newId !== \"\")\n        {\n            let id = newId;\n            axios.post('https://' + document.location.hostname + '/entries/update/' + id, dbEntry)\n            .then((response) => {\n                console.log(response.data)\n                setId(\"\")\n                setTitle(\"\")\n                setDate(\"\")\n                setText(\"\")\n                loadProfile()\n            })\n            .catch((error) => {console.log(\"could not update\")})\n            return\n        }\n\n        //temp url!\n        axios.post('https://' + document.location.hostname + '/entries/add', dbEntry)\n            .then((response) => {\n                console.log(response.data)\n                setArray([...displayArray, myNewEntry])\n                setTitle(\"\")\n                setDate(\"\")\n                setText(\"\")\n                loadProfile()\n            })\n            .catch((error) => {\n                alert(\"You must enter a title, date, and text before you can submit a new entry.\")\n            })\n    }\n\n    function changeHandler(editObject){\n        if (editObject.change === \"delete\"){\n            deleteEntry(editObject)\n        }\n        else {\n            editEntry(editObject)\n        } \n    }\n\n    function deleteEntry(editObject) {\n        let id = editObject.id;\n        axios.delete('https://' + document.location.hostname + '/entries/' + id)\n            .then(res => {\n                console.log(res.data)\n                loadProfile()    \n            });\n    }   \n\n    function editEntry(editObject) {            \n        setId(editObject.entry._id)\n        setTitle(editObject.entry.title)\n        setDate(editObject.entry.date.substring(0,10))\n        setText(editObject.entry.text)\n    }\n\n    function updateValue(newValue){\n        if (\"title\" in newValue){\n            setTitle(newValue.title)\n        }\n        \n        if (\"date\" in newValue){\n            setDate(newValue.date)\n        }\n\n        if (\"text\" in newValue){\n            setText(newValue.text)\n        }\n        \n    }\n    \n    function searchHandler(keyword) {\n        if (keyword !== \"\"){\n            setSearch(displayArray.filter((item , i) => { \n                if (displayArray[i].text.includes(keyword) || displayArray[i].title.includes(keyword))\n                {\n                 return item \n                }\n                else return\n            }))\n        }\n        else {\n            setSearch([])\n        }\n    }\n\n    const [main, setHeader] = React.useState()\n    const [accent, setSidebar] = React.useState()\n    const [profile, setProfile] = React.useState([])\n    const [isLoaded, loaded] = React.useState(false)\n    const [toggle, toggleThis] = React.useState(false)\n\n    let headerColors = [\"pink\", \"CornflowerBlue\", \"DarkSeaGreen\"]\n    let sideColors = [\"palevioletred\", \"aliceBlue\", \"SeaGreen\"]\n\n    function loadProfile() {\n        axios.get('https://' + document.location.hostname + '/users')\n            .then(response=> {\n                console.log(response.data)\n                if (response.data.length > 0){\n                    let curUser = response.data.filter(function (obj){\n                        return obj.username === user.sub;\n                    });\n\n                    setProfile(curUser[0])\n                    setHeader({backgroundColor : headerColors[profile.theme]})\n                    setSidebar({backgroundColor : sideColors[profile.theme]})\n                    loaded(true)\n                }\n                else {\n                    const dbUser = {\n                        username: user.sub,\n                        theme: 1\n                    }\n                    addUser(dbUser)\n                }   \n            });\n        \n        // get entires from db\n        axios.get('https://' + document.location.hostname + 'entries')\n            .then(response=> {\n                console.log(response.data)\n                if (response.data.length > 0){\n                        let entries = response.data.filter( function(obj) {\n                            if (obj.username === user.sub){\n                                let entry = {\n                                    id : obj._id,\n                                    username : obj.username,\n                                    title : obj.title,\n                                    text: obj.text,\n                                    date: obj.date\n                                }\n                                return entry;\n                            }\n                            else return\n                    })\n                    setArray([...entries])    \n                }\n                else {\n                    setArray([...[]])\n                }\n            })\n\n    }  \n    \n    function addUser(dbUser) {\n        axios.post('https://' + document.location.hostname + '/users/add', dbUser)\n        .then((response) => {\n            console.log(response.data)\n        });\n\n        setProfile(dbUser)\n        loaded(true)\n    } \n\n    function cycleTheme(){\n        var newIndex = profile.theme+1;\n        if (newIndex > 2){\n            newIndex = 0\n        }\n\n        setProfile({\n            _id: profile._id,\n            username: profile.username,\n            theme: newIndex\n          });\n        setHeader({backgroundColor : headerColors[newIndex]})\n        setSidebar({backgroundColor : sideColors[newIndex]})\n        \n        let updateDB = {\n            username: profile.username,\n            theme: newIndex\n        }\n\n        axios.post('https://' + document.location.hostname + '/users/update/' + profile._id, updateDB)\n      .then(res => console.log(res.data));\n    }\n\n    useEffect(()=>{\n        if (isAuthenticated){\n        loadProfile()\n        }\n    }, [isAuthenticated, isLoaded]) \n    \n    return (\n        isAuthenticated && (\n            <div>\n                    \n                <div className = \"header\" style = {main}>\n                    <h1>Daily Diary Hub</h1>\n                    <QuoteContainer id = {user.sub}/>\n                    <div className = \"navBttns\">\n                        <img src = {user.picture} alt = {user.name} className = \"profilePic\"/>\n                        <LogoutButton />\n                        <button style = {button} onClick = {cycleTheme}>\n                            Change Theme\n                        </button>\n                    </div>\n                </div>\n                <div style = {mainContent}>\n                    \n                    <div style = {sidebar, accent} className = \"side-bar\">  \n                        <NewEntry title = {newTitle} date = {newDate} text = {newText} id = {newId} submitHandler = {submitHandler} updateValue = {updateValue}/>\n                        <SocialMedia />\n                    </div >\n                    <div style = {displayEntries}>\n                        <SearchBar searchHandler = {searchHandler} value = \"\"/>\n                        <DiaryCards entries = {searchArray.length > 0  ? searchArray : displayArray} changeHandler = {changeHandler} />\n                    </div>\n                    \n                </div>\n                \n            </div>\n        )\n    )\n}\n\nexport default Hub","import './App.css';\nimport LoginButton from './components/LoginButton';\nimport Hub from './components/Hub';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Spinner from 'react-bootstrap/Spinner'\n\nfunction App() {\n  const {isLoading} = useAuth0();\n  if (isLoading) return (\n    \n    <Spinner animation=\"border\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n    )\n\n  return (\n    <div>   \n      <LoginButton/>\n      <Hub />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport{ Auth0Provider } from '@auth0/auth0-react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//.env var dont work\n// const myDomain = process.env.REACT_APP_AUTH0_DOMAIN; need to get API keys out of main\n// const myClientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\n\nReactDOM.render(\n\n  \n  <Auth0Provider\n    domain = {'angelageorge.us.auth0.com'}\n    clientId = {'yhC1e1aALnX47IHMCLq3vJTrueekAfnT'}\n    redirectURi = {window.location.origin}>\n    <App />\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}